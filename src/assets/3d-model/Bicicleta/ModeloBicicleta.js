import React, { useRef } from "react";
import { useGLTF } from "@react-three/drei";

export function Bicicleta(props) {
  const { nodes, materials } = useGLTF("/bicicleta.gltf");

  return (
    <group {...props} dispose={null}>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes["|bicycle_VISUALIZE|Root|polished_aluminum"].geometry}
        material={materials.polished_aluminum}
        material-color={"#818181"}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes["|bicycle_VISUALIZE|Root|metallic_gold"].geometry}
        material={materials.metallic_gold}
        material-color={"#0c558e"}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={
          nodes["|bicycle_VISUALIZE|Root|satin_finish_stainless_steel"].geometry
        }
        material={materials.satin_finish_stainless_steel}
        material-color={"#616161"}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes["|bicycle_VISUALIZE|Root|color"].geometry}
        material={materials.color}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes["|bicycle_VISUALIZE|Root|matte_steel"].geometry}
        material={materials.matte_steel}
        material-color={"#0c558e"}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes["|bicycle_VISUALIZE|Root|wrought_steel"].geometry}
        material={materials.wrought_steel}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={
          nodes["|bicycle_VISUALIZE|Root|satin_finish_aluminum"].geometry
        }
        material={materials.satin_finish_aluminum}
        material-color={"#fffb60"}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes["|bicycle_VISUALIZE|Root|polished_aluminum-2"].geometry}
        material={materials["polished_aluminum-2"]}
        material-color={"#000000"}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes["|bicycle_VISUALIZE|Root|color-2"].geometry}
        material={materials["color-2"]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={
          nodes["|bicycle_VISUALIZE|Root|white_medium_gloss_plastic"].geometry
        }
        material={materials.white_medium_gloss_plastic}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes["|bicycle_VISUALIZE|Root|burnished_aluminum"].geometry}
        material={materials.burnished_aluminum}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes["|bicycle_VISUALIZE|Root|PW-MT11150"].geometry}
        material={materials["PW-MT11150"]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes["|bicycle_VISUALIZE|Root|textured_rubber"].geometry}
        material={materials.textured_rubber}
        material-color={"#000000"}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes["|bicycle_VISUALIZE|Root|metallic_warm_grey"].geometry}
        material={materials.metallic_warm_grey}
        material-color={"#404040"}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes["|bicycle_VISUALIZE|Root|chromium_plate"].geometry}
        material={materials.chromium_plate}
        material-color={"#000000"}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes["|bicycle_VISUALIZE|Root|color(Legacy)"].geometry}
        material={materials["color(Legacy)"]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes["|bicycle_VISUALIZE|Root|polished_aluminum-4"].geometry}
        material={materials["polished_aluminum-4"]}
        material-color={"#c4c4c4"}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes["|bicycle_VISUALIZE|Root|polished_aluminum-5"].geometry}
        material={materials["polished_aluminum-5"]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={
          nodes["|bicycle_VISUALIZE|Root|blue_knurled_plastic"].geometry
        }
        material={materials.blue_knurled_plastic}
        material-color={"#c06b01"}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes["|bicycle_VISUALIZE|Root|glossy_rubber"].geometry}
        material={materials.glossy_rubber}
        material-color={"#000000"}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes["|bicycle_VISUALIZE|Root|tire_tread"].geometry}
        material={materials.tire_tread}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={
          nodes["|bicycle_VISUALIZE|Root|sandblasted_aluminum"].geometry
        }
        material={materials.sandblasted_aluminum}
        material-color={"#818181"}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes["|bicycle_VISUALIZE|Root|PW-MT11150-2"].geometry}
        material={materials["PW-MT11150-2"]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes["|bicycle_VISUALIZE|Root|brushed_galvanized"].geometry}
        material={materials.brushed_galvanized}
        material-color={"#d6d6d6"}
      />
    </group>
  );
}

useGLTF.preload("/bicicleta.gltf");
export default Bicicleta;
